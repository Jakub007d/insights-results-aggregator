---
apiVersion: v1
kind: Template
metadata:
  name: ccx-data-pipeline
objects:

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: insights-results-db
  spec:
    envName: ${ENV_NAME}
    dependencies:
      - ingress
    deployments:
      - name: writer
        minReplicas: ${{MIN_REPLICAS}}
        webServices:
          public:
            enabled: false
          private:
            enabled: true
          metrics:
            enabled: true
        podSpec:
          initContainers:
            - name: execute-migrations
              image: ${IMAGE}:${IMAGE_TAG}
              env:
                - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__ENABLED
                  value: "false"
                - name: INSIGHTS_RESULTS_AGGREGATOR__METRICS__ENABLED
                  value: "false"
                - name: INSIGHTS_RESULTS_AGGREGATOR__STORAGE__DB_DRIVER
                  value: postgres
                - name: INSIGHTS_RESULTS_AGGREGATOR__STORAGE__PG_PARAMS
                  value: sslmode=disable
                - name: INSIGHTS_RESULTS_AGGREGATOR__LOGGING__LOGGING_TO_CLOUD_WATCH_ENABLED
                  value: "false"
              resources:
                requests:
                  cpu: 100m
                  memory: 150Mi
                limits:
                  cpu: 200m
                  memory: 300Mi
              command:
                - ./insights-results-aggregator
                - migration
                - latest
          env:
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__ADDRESS
              value: "${KAFKA_BOOTSTRAP_HOST}:${KAFKA_BOOTSTRAP_PORT}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__TIMEOUT
              value: "${KAFKA_TIMEOUT}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__TOPIC
              value: "${INCOMING_TOPIC}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__PAYLOAD_TRACKER_TOPIC
              value: "${PAYLOAD_TRACKER_TOPIC}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__SERVICE_NAME
              value: "${DB_WRITER_SERVICE_NAME}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__GROUP
              value: "${GROUP_ID}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__ENABLED
              value: "true"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__ENABLE_ORG_WHITELIST
              value: "false"
            - name: INSIGHTS_RESULTS_AGGREGATOR__CONTENT__PATH
              value: "/rules-content"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__ADDRESS
              value: ":8080"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__API_PREFIX
              value: "${IRDW_API_PREFIX}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__API_SPEC_FILE
              value: "/openapi/openapi.json"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__DEBUG
              value: "${DEBUG}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__AUTH
              value: "${AUTH}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__AUTH_TYPE
              value: "xrh"
            - name: INSIGHTS_RESULTS_AGGREGATOR__PROCESSING__ORG_WHITELIST_FILE
              value: "/data/org_whitelist.csv"
            - name: INSIGHTS_RESULTS_AGGREGATOR__METRICS__ENABLED
              value: "true"
            - name: INSIGHTS_RESULTS_AGGREGATOR__STORAGE__DB_DRIVER
              value: postgres
            - name: HABERDASHER_EMITTER
              value: ${HABERDASHER_EMITTER}
            - name: HABERDASHER_KAFKA_BOOTSTRAP
              value: ${HABERDASHER_KAFKA_BOOTSTRAP}
            - name: HABERDASHER_KAFKA_TOPIC
              value: ${HABERDASHER_KAFKA_TOPIC}
            - name: HABERDASHER_LABELS
              value: ${DBWRITER_HABERDASHER_LABELS}
            - name: HABERDASHER_TAGS
              value: ${HABERDASHER_TAGS}
            - name: INSIGHTS_RESULTS_AGGREGATOR__STORAGE__PG_PARAMS
              value: sslmode=disable
            - name: INSIGHTS_RESULTS_AGGREGATOR__LOGGING__LOGGING_TO_CLOUD_WATCH_ENABLED
              value: "false"
          image: ${IMAGE}:${IMAGE_TAG}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: "${IRDW_API_PREFIX}metrics"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: "${IRDW_API_PREFIX}metrics"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
            limits:
              cpu: 200m
              memory: 300Mi
    database:
      name: ccx-data-pipeline-db
      version: 12
    kafkaTopics:
      - replicas: 3
        partitions: 1
        topicName: ${INCOMING_TOPIC}
      - replicas: 3
        partitions: 1
        topicName: platform.payload-status


parameters:
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/insights-results-aggregator
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: "true"
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- description: Minimum number of pods to use when autoscaling is enabled
  name: MIN_REPLICAS
  value: '1'
- description: Maximum number of pods to use when autoscaling is enabled
  name: MAX_REPLICAS
  value: '6'
- name: PAYLOAD_TRACKER_TOPIC
  description: Kafka topic for publishing updated for the Payload Tracker service
  value: platform.payload-status
- name: HABERDASHER_EMITTER
  description: Emitter for haberdasher logs [stderr|kafka]
  value: stderr
- name: HABERDASHER_KAFKA_BOOTSTRAP
  description: Bootstrap server for haberdasher kafka emitter
  value: "mq-kafka:29092"
- name: HABERDASHER_KAFKA_TOPIC
  description: Kafka topic for haberdasher kafka emitter
  value: "platform.logging.logs"
- name: DEBUG
  value: "true"
- name: AUTH
  value: "false"

  # insights-results-db-writer
- name: KAFKA_BOOTSTRAP_HOST
  required: true
  value: mq-kafka
- name: KAFKA_BOOTSTRAP_PORT
  required: true
  value: "29092"
- name: KAFKA_TIMEOUT
  value: 300s
- name: INCOMING_TOPIC
  value: ccx.ocp.results
  required: true
- name: PAYLOAD_TRACKER_TOPIC
  value: platform.payload-status
  required: true
- name: DB_WRITER_SERVICE_NAME
  value: insights-results-db-writer
  required: true
- name: GROUP_ID
  value: ccx_data_pipeline_app
  required: true
- name: IRDW_API_PREFIX
  required: true
  value: /
- name: IRDW_LOG_STREAM
  value: insights-results-db-writer
- name: DB_WRITER_REPLICAS
  description: The number of replicas to use for the insights-results-db-writer deployment
  value: "1"
- name: DBWRITER_HABERDASHER_LABELS
  description: Haberdasher labels for unstructured logs
  value: '{"app": "ccx-insights-results-db-writer"}'
- name: HABERDASHER_EMITTER
  description: Emitter for haberdasher logs [stderr|kafka]
  value: stderr
- name: HABERDASHER_KAFKA_BOOTSTRAP
  description: Bootstrap server for haberdasher kafka emitter
  value: "mq-kafka:29092"
- name: HABERDASHER_KAFKA_TOPIC
  description: Kafka topic for haberdasher kafka emitter
  value: "platform.logging.logs"
- name: HABERDASHER_TAGS
  description: Haberdasher tags for unstructured logs
  value: '["ccx"]'